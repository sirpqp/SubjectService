# Generated by Django 2.1.15 on 2020-07-17 06:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, upload_to='upload/avatar/', verbose_name='头像')),
                ('nickname', models.CharField(max_length=64, verbose_name='显示名')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('work_id', models.CharField(blank=True, max_length=32, verbose_name='工号')),
                ('dept', models.CharField(blank=True, max_length=32, verbose_name='部门')),
                ('qq', models.CharField(blank=True, max_length=32, verbose_name='QQ号')),
                ('wechat', models.CharField(blank=True, max_length=32, verbose_name='微信号')),
                ('memo', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='群名称')),
                ('type', models.CharField(max_length=8, verbose_name='群类型')),
                ('gid', models.CharField(blank=True, max_length=32, verbose_name='群号码')),
                ('memo', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
            ],
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='刊名')),
                ('year', models.CharField(max_length=32, verbose_name='年份')),
            ],
        ),
        migrations.CreateModel(
            name='JournalRes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Journal')),
            ],
        ),
        migrations.CreateModel(
            name='Organ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='机构名称')),
                ('contact', models.CharField(blank=True, max_length=64, verbose_name='联系人')),
                ('tel', models.CharField(blank=True, max_length=32, verbose_name='联系电话')),
                ('memo', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('vip', models.SmallIntegerField(default=0, verbose_name='VIP等级')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='大区名')),
                ('money', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='余额')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guid', models.UUIDField(unique=True, verbose_name='识别号')),
                ('description', models.TextField(verbose_name='需求描述')),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='录入时间')),
                ('status', models.CharField(default='none', max_length=32, verbose_name='服务状态')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Customer')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Group')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='标题')),
                ('path', models.FilePathField(path='uploads/res/%Y/%m/%d/', verbose_name='文件路径')),
                ('size', models.PositiveIntegerField(verbose_name='文件大小')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='花费')),
                ('uid', models.CharField(blank=True, max_length=64, unique=True, verbose_name='唯一标准编号')),
                ('source', models.CharField(blank=True, max_length=64, verbose_name='来源')),
            ],
        ),
        migrations.CreateModel(
            name='ResType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='资源名')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='权限名')),
            ],
        ),
        migrations.CreateModel(
            name='SellerRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Region')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='任务标题')),
                ('status', models.CharField(default='none', max_length=32, verbose_name='服务状态')),
                ('data_received', models.DateTimeField(blank=True, null=True, verbose_name='响应时间')),
                ('data_replied', models.DateTimeField(blank=True, null=True, verbose_name='回复时间')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('avatar', models.ImageField(blank=True, upload_to='upload/avatar/', verbose_name='头像')),
                ('nickname', models.CharField(max_length=255, verbose_name='显示名')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Role')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='receiver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='receiver_user', to='api.User'),
        ),
        migrations.AddField(
            model_name='task',
            name='replier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='replier_user', to='api.User'),
        ),
        migrations.AddField(
            model_name='task',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Request', to_field='guid'),
        ),
        migrations.AddField(
            model_name='task',
            name='resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='api.Resource'),
        ),
        migrations.AddField(
            model_name='sellerregion',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.User'),
        ),
        migrations.AddField(
            model_name='resource',
            name='restype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.ResType'),
        ),
        migrations.AddField(
            model_name='request',
            name='registrar',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.User'),
        ),
        migrations.AddField(
            model_name='organ',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.SellerRegion'),
        ),
        migrations.AddField(
            model_name='journalres',
            name='res',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Resource'),
        ),
        migrations.AddField(
            model_name='group',
            name='organ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Organ'),
        ),
        migrations.AddField(
            model_name='customer',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.Group'),
        ),
        migrations.AddField(
            model_name='customer',
            name='organ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Organ'),
        ),
    ]
